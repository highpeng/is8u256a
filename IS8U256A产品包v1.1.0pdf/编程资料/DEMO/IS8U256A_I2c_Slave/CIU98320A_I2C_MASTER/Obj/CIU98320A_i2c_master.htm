<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Obj\CIU98320A_i2c_master.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Obj\CIU98320A_i2c_master.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 791]: Last Updated: Fri Dec 13 09:33:29 2013
<BR><P>
<H3>Maximum Stack Usage =         24 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SysClkConfiguration
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2d]">Reset_Handler</a>
 <LI><a href="#[69]">__user_initial_stackheap</a>
 <LI><a href="#[2]">Soft_Reset</a>
 <LI><a href="#[3]">Undef_Handler</a>
 <LI><a href="#[4]">SWI_Handler_t</a>
 <LI><a href="#[5]">PAbt_Handler_t</a>
 <LI><a href="#[6]">DAbt_Handler_t</a>
 <LI><a href="#[7]">IRQ_Handler_t</a>
 <LI><a href="#[8]">FIQ_Handler_t</a>
 <LI><a href="#[9]">Interrupt_Vector_Table</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">Undef_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">DAbt_Handler_t</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[8]">FIQ_Handler_t</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[7]">IRQ_Handler_t</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[9]">Interrupt_Vector_Table</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[5]">PAbt_Handler_t</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[4]">SWI_Handler_t</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[2]">Soft_Reset</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[3]">Undef_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[c]">__main</a> from __main.o(!!!main) referenced from startup.o(RESET)
 <LI><a href="#[b]">main</a> from ciu98320a_main.o(.text) referenced from rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[d]"></a>ISR0_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[e]"></a>ISR1_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[f]"></a>ISR2_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[10]"></a>ISR3_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[11]"></a>ISR4_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[12]"></a>ISR5_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[13]"></a>ISR6_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[14]"></a>ISR7_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[15]"></a>ISR8_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slave7816RstIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[16]"></a>ISR9_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slave7816TxIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[17]"></a>ISR10_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slave7816RxIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[18]"></a>ISR11_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slave7816OverFlowIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[19]"></a>ISR12_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[1a]"></a>ISR13_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[1b]"></a>ISR14_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi0IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[1c]"></a>ISR15_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[1d]"></a>ISR16_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[1e]"></a>ISR17_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[1f]"></a>ISR18_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[20]"></a>ISR19_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Master7816TxIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[21]"></a>ISR20_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Master7816RxIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[22]"></a>ISR21_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Master7816OverFlowIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[23]"></a>ISR22_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[24]"></a>ISR23_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi2IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[25]"></a>ISR24_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[26]"></a>ISR25_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PKEIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[27]"></a>ISR26_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[28]"></a>ISR27_Body</STRONG> (ARM, 16 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM1IrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[29]"></a>ISR28_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[2a]"></a>ISR29_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[2b]"></a>ISR30_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[2c]"></a>ISR31_Body</STRONG> (ARM, 12 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Vector_Table
</UL>

<P><STRONG><a name="[2d]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_Reset
</UL>

<P><STRONG><a name="[2e]"></a>DAbt_Handler</STRONG> (ARM, 32 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbtIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler_t
</UL>

<P><STRONG><a name="[2f]"></a>PAbt_Handler</STRONG> (ARM, 32 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbtIrqHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler_t
</UL>

<P><STRONG><a name="[30]"></a>SWI_Handler</STRONG> (ARM, 8 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler_t
</UL>

<P><STRONG><a name="[31]"></a>IRQ_Handler</STRONG> (ARM, 24 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler_t
</UL>

<P><STRONG><a name="[32]"></a>FIQ_Handler</STRONG> (ARM, 24 bytes, Stack size 0 bytes, startup.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler_t
</UL>

<P><STRONG><a name="[c]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[6d]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[6f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[70]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[71]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[72]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[73]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[74]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[75]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[76]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[77]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[78]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[79]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[80]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[81]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[56]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[83]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[84]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[85]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[86]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[87]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[4c]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[88]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[50]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[52]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[89]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[53]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[8a]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6b]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[55]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[8b]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[57]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via Veneer)
</UL>

<P><STRONG><a name="[69]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[33]"></a>Timer1IrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR0_Body
</UL>

<P><STRONG><a name="[34]"></a>Timer2IrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR1_Body
</UL>

<P><STRONG><a name="[35]"></a>WatchDogIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR2_Body
</UL>

<P><STRONG><a name="[36]"></a>FlashIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR3_Body
</UL>

<P><STRONG><a name="[37]"></a>GpioIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR4_Body
</UL>

<P><STRONG><a name="[38]"></a>Timer3IrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR5_Body
</UL>

<P><STRONG><a name="[39]"></a>DmaIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR6_Body
</UL>

<P><STRONG><a name="[3a]"></a>PllIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR7_Body
</UL>

<P><STRONG><a name="[3b]"></a>Slave7816RstIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR8_Body
</UL>

<P><STRONG><a name="[3c]"></a>Slave7816TxIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR9_Body
</UL>

<P><STRONG><a name="[3d]"></a>Slave7816RxIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR10_Body
</UL>

<P><STRONG><a name="[3e]"></a>Slave7816OverFlowIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR11_Body
</UL>

<P><STRONG><a name="[3f]"></a>UsbIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR13_Body
</UL>

<P><STRONG><a name="[40]"></a>Spi0IrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR14_Body
</UL>

<P><STRONG><a name="[41]"></a>I2CIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR17_Body
</UL>

<P><STRONG><a name="[42]"></a>UartIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR18_Body
</UL>

<P><STRONG><a name="[43]"></a>Master7816TxIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR19_Body
</UL>

<P><STRONG><a name="[44]"></a>Master7816RxIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR20_Body
</UL>

<P><STRONG><a name="[45]"></a>Master7816OverFlowIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR21_Body
</UL>

<P><STRONG><a name="[46]"></a>Spi2IrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR23_Body
</UL>

<P><STRONG><a name="[47]"></a>PKEIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR25_Body
</UL>

<P><STRONG><a name="[48]"></a>SM1IrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR27_Body
</UL>

<P><STRONG><a name="[4a]"></a>PAbtIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>

<P><STRONG><a name="[49]"></a>DAbtIrqHandler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ciu98320a_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>

<P><STRONG><a name="[59]"></a>SysClkConfiguration</STRONG> (ARM, 60 bytes, Stack size 24 bytes, ciu98320a_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysClkConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>main</STRONG> (ARM, 260 bytes, Stack size 0 bytes, ciu98320a_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = main &rArr; SysClkConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGpioXIn
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceByteWithNAK
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceByteWithACK
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CGenerateStop
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CGenerateStart
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CCtrlInit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[5d]"></a>I2CCtrlInit</STRONG> (ARM, 68 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>I2CGenerateStart</STRONG> (ARM, 136 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>I2CGenerateReStart</STRONG> (ARM, 136 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>I2CGenerateStop</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>I2CSendByte</STRONG> (ARM, 96 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>I2CReceByteWithACK</STRONG> (ARM, 104 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>I2CReceByteWithNAK</STRONG> (ARM, 104 bytes, Stack size 0 bytes, ciu98320a_i2c_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>SysClkInit</STRONG> (ARM, 108 bytes, Stack size 0 bytes, ciu98320a_sysclk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkConfiguration
</UL>

<P><STRONG><a name="[5b]"></a>GpioInit</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ciu98320a_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>SetGpioXOut</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ciu98320a_gpio.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>SetGpioXIn</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ciu98320a_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>SetGpioXHigh</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ciu98320a_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>SetGpioXLow</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ciu98320a_gpio.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[65]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[90]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[51]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[54]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[96]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[97]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[58]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via Veneer)
</UL>

<P><STRONG><a name="[98]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__semihosting_library_function</STRONG> (ARM, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[9b]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2]"></a>Soft_Reset</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SWI_Handler_t</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PAbt_Handler_t</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DAbt_Handler_t</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>IRQ_Handler_t</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FIQ_Handler_t</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>Interrupt_Vector_Table</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR31_Body
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR30_Body
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR29_Body
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR28_Body
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR27_Body
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR26_Body
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR25_Body
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR24_Body
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR23_Body
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR22_Body
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR21_Body
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR20_Body
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR19_Body
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR18_Body
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR17_Body
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR16_Body
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR15_Body
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR14_Body
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR13_Body
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR12_Body
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR11_Body
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR10_Body
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR9_Body
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR8_Body
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR7_Body
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR6_Body
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR5_Body
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR4_Body
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR3_Body
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR2_Body
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR1_Body
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISR0_Body
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[6a]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
